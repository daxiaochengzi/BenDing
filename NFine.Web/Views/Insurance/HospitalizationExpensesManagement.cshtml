@{
    ViewBag.Title = "住院费用清单上传";
    Layout = "~/Views/Shared/_Base.cshtml";
}
<div class="layui-tab layui-tab-card layui-tab-brief" lay-filter="demo">
    <ul class="layui-tab-title">
        <li class="layui-this">院内费用明细</li>
        <li>已传费用明细</li>
    </ul>
    <div class="layui-tab-content">
        <input type="hidden" id="bid" name="BusinessId" value="@ViewBag.bid" placeholder="业务ID" />
        <input type="hidden" id="empid" name="UserId" value="@ViewBag.empid" placeholder="用户ID" />
        <div class="layui-tab-item layui-show">
            <div class="layui-form" lay-filter="LAY-bill-data-list">
                <div class="layui-form-item">
                    <div class="layui-inline">
                        <label class="layui-form-label">费用状态</label>
                        <div class="layui-input-inline">
                            <select id="UploadMark" name="UploadMark" lay-verify="required">
                                <option value="">请选择条件</option>
                                <option value="0">未上传</option>
                                <option value="1">已上传</option>
                            </select>
                        </div>
                    </div>

                    <div class="layui-inline">
                        <label class="layui-form-label">药品名称</label>
                        <div class="layui-input-inline">
                            <input type="text" name="DirectoryName" placeholder="请输入药品名称" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">费用日期</label>
                        <div class="layui-input-inline">
                            <input type="text" id="date1" name="BillTime" placeholder="请输入费用日期" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <button class="layui-btn" lay-submit lay-filter="">查询</button>
                        <button class="layui-btn" data-type="cleanSearch">清除</button>
                    </div>
                </div>
            </div>
            <!--院内费用明细列表-->
            <table id="dataTableBillId" lay-filter="dataTableBillId"></table>
        </div>


        <div class="layui-tab-item">
            <div class="layui-form" lay-filter="LAY-updated-data-list">
                <div class="layui-form-item">
                    <div class="layui-inline">
                        <label class="layui-form-label">目录编码</label>
                        <div class="layui-input-inline">
                            <input type="text" name="ProjectCode" placeholder="请输入编码" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">目录名称</label>
                        <div class="layui-input-inline">
                            <input type="text" name="ProjectName" placeholder="请输入名称" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <button class="layui-btn" lay-submit lay-filter="LAY-yibao-content-list">查询</button>
                        <button class="layui-btn" data-type="cleanSearch">清除</button>
                    </div>
                </div>
            </div>
            <table id="LAY-updated-data" lay-filter="LAY-updated-data"></table>
        </div>
    </div>
</div>

<script>
    layui.config({
        base: '/Content/js/layui/plugin/' //假设这是test.js所在的目录
    }).extend({ //设定模块别名
        autocomplete: 'layAutoComplete'
    });

    layui.use(['form', 'laypage', 'layer', 'table', 'element', 'laydate', 'autocomplete'], function () {
        var $ = layui.$
            //Tab的切换功能，切换事件监听等，需要依赖element模块
            , element = layui.element
            , form = layui.form
            , layer = layui.layer
            , table = layui.table
            , laydate = layui.laydate;

        //执行一个laydate实例
        laydate.render({ elem: '#date1' });

        form.render(null, "LAY-bill-data-list");
        //数据表格实例化
        var layTableId = "dataTableBillId"; //默认
        var tableIns = table.render({
            elem: '#dataTableBillId',
            id: layTableId,
            limits: [10, 20, 50],
            page: true,
            //cellMinWidth: 80,
            toolbar: '#toolbarDemo', //开启头部工具栏，并为其绑定左侧模板
            cols: [[
                { type: 'checkbox', fixed: 'left' },
                { title: '序号', type: 'numbers', align:'center' },
                , { field: 'UploadMark', title: '上传状态', width: 100, toolbar: '#tableBtn', align: 'center' }
                , { field: 'DirectoryCode', title: '药品编码', width: 320, hide: true }
                , { field: 'DirectoryName', title: '药品名称', width: 280 }
                , { field: 'DirectoryCategoryCode', title: '药品类别', width: 100 }
                , { field: 'Quantity', title: '数量', width: 100 }
                , { field: 'UnitPrice', title: '单价', width: 100 }
                , { field: 'Amount', title: '金额', width: 100 }
                , { field: 'BillTime', title: '费用日期', width: 160 }
                , { field: 'UploadUserName', title: '操作员', width: 100, hide: true }
                , { field: 'RecipeCode', title: '处方号', width: 310, hide: true}
                , { field: 'BillDepartment', title: '科室', width: 100 }
                , { field: 'OperateDoctorName', title: '执行医生', width: 100 }
                , { field: 'ProjectCode', title: '医保编码', width: 100 }
                , { field: 'ProjectCodeType', title: '医保类别', width: 100 }
                , { field: 'UploadAmount', title: '医保上传金额', width: 100 }
                , { field: 'ProjectLevel', title: '项目等级', width: 100 }
                , { field: 'SelfPayProportion', title: '自付比例', width: 100 }
                , { field: 'BlockPrice', title: '限制价格', width: 100 }
                , { field: 'BlockRemark', title: '限制使用说明', width: 100, hide: true}
                , { field: 'Specification', title: '规格', width: 100, hide: true}
               
                , { field: 'AdjustmentDifferenceValue', title: '调整差值', width: 100, hide: true}
                , { field: 'OrganizationCode', title: '组织机构', width: 280, hide: true}
                , {
                    title: '操作', fixed: 'right', width: 100, templet: function (d) {
                        return '<a class="layui-btn layui-btn-xs layui-btn-danger" lay-event="del" lay-id="' + d.DiagnosisCode + '"><i class="layui-icon layui-icon-delete"></i>上传</a>';
                    }
                }
            ]]
        });


        //定义事件集合
        var active = {
            updateRow: function (obj) {
                var oldData = table.cache[layTableId];
                for (var i = 0, row; i < oldData.length; i++) {
                    row = oldData[i];
                    if (row.DiagnosisCode == obj.DiagnosisCode) {
                        $.extend(oldData[i], obj);
                        return;
                    }
                }
                tableIns.reload({
                    data: oldData
                });
            },
            removeEmptyTableCache: function () {
                var oldData = table.cache[layTableId];
                for (var i = 0, row; i < oldData.length; i++) {
                    row = oldData[i];
                    if (!row || !row.Id) {
                        oldData.splice(i, 1);    //删除一项
                    }
                    continue;
                }
                tableIns.reload({
                    data: oldData
                });
            },
        };
        //注册按钮事件
        $('.layui-btn[data-type]').on('click', function () {
            var type = $(this).data('type');
            activeByType(type);
        });
        //激活事件
        var activeByType = function (type, arg) {
            if (arguments.length === 2) {
                active[type] ? active[type].call(this, arg) : '';
            } else {
                active[type] ? active[type].call(this) : '';
            }
        }
        //监听工具条
        table.on('tool(dataTable)', function (obj) {
            var data = obj.data, event = obj.event, tr = obj.tr; //获得当前行 tr 的DOM对象;
            switch (event) {
                case "diagnosis":
                    var stateVal = tr.find("input[name='IsMainDiagnosis']").prop('checked') ? true : false;
                    $.extend(obj.data, { 'IsMainDiagnosis': stateVal })
                    activeByType('updateRow', obj.data);	//更新行记录对象
                    break;
                case "del":
                    layer.confirm('真的删除行么？', function (index) {
                        obj.del(); //删除对应行（tr）的DOM结构，并更新缓存
                        layer.close(index);
                        activeByType('removeEmptyTableCache');
                    });
                    break;
            }
        });
        //处方上传（费用清单上传）
        var PrescriptionUpload = function (tableData) {
            var params = {
                "BusinessId": $("#bid").val() /*当前住院记录的业务ID*/
                , "UserId": $("#empid").val() /*授权操作人的ID*/
                , "DataIdList": tableData
            }
            $.ajax({
                url: host + '/PrescriptionUpload',
                data: params,
                dataType: "json",
                async: false,
                success: function (res) {
                    if (res.Success === false) {
                        var errData = res.Message;
                        //样式类名:墨绿深蓝风
                        layer.alert(errData, { skin: 'layui-layer-molv', icon: 3, title: '提示' });
                    } else {
                        console.log(res);
                        layer.msg(res);
                    }
                }
            });
        }
        //头工具栏事件
        table.on('toolbar(dataTableBillId)', function (obj) {
            var checkStatus = table.checkStatus(obj.config.id);
            switch (obj.event) {
                case 'batchUpdateData':
                    var data = checkStatus.data;//选中行的数据
                    //排除已经上传了的数据
                    var dataIds = [];
                    for (var i in data) {
                        if (data[i].UploadMark == '0') {
                            dataIds.push(data[i].Id);
                        }                        
                    }
                    console.log(dataIds);
                    layer.msg('选中了：' + dataIds.length + ' 个未上传的数据');
                    PrescriptionUpload(dataIds);
                    //layer.alert(JSON.stringify(dataUp));
                    break;
                case 'getCheckData':
                    var data = checkStatus.data;
                    layer.alert(JSON.stringify(data));
                    break;
                case 'getCheckLength':
                    var data = checkStatus.data;
                    layer.msg('选中了：' + data.length + ' 个');
                    break;
                case 'isAll':
                    layer.msg(checkStatus.isAll ? '全选' : '未全选');
                    break;

                //自定义头工具栏右侧图标 - 提示
                case 'LAYTABLE_TIPS':
                    layer.alert('这是工具栏右侧自定义的一个图标按钮');
                    break;
            };
        });
        //页面一加载就发送ajax
        $(function () {
            //默认tab1选中执行
            var params = {
                "BusinessId": $("#bid").val() /*当前住院记录的业务ID*/
                , "UserId": $("#empid").val() /*授权操作人的ID*/
            }
            $.ajax({
                url: host+'/QueryHospitalizationFee',
                data: params,
                dataType: "json",
                async: false,
                success: function (res) {
                    if (res.Success === false) {
                        var errData = res.Message;
                        //样式类名:墨绿深蓝风
                        layer.alert(errData, { skin: 'layui-layer-molv', icon: 3, title: '提示' });
                    } else {
                        var data = res.Data;
                        console.log(res);
                        //费用列表初始化
                        tableIns.reload({
                            elem: '#dataTableBillId',
                            id: 'dataTableBillId',
                            data: data.data,
                            count: data.count
                        });
                    }
                }
            });
        });




    });
</script>

<script type="text/html" id="toolbarDemo">
    <div class="layui-btn-container">
        <button class="layui-btn layui-btn-sm" lay-event="batchUpdateData">批量上传</button>
        <!--
            <button class="layui-btn layui-btn-sm" lay-event="getCheckData">获取选中行数据</button>
            <button class="layui-btn layui-btn-sm" lay-event="getCheckLength">获取选中数目</button>
            <button class="layui-btn layui-btn-sm" lay-event="isAll">验证是否全选</button>
        -->
    </div>
</script>

<script type="text/html" id="tableBtn">
    {{#  if(d.UploadMark == 0){ }}
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="pairCode">未上传</a>
    {{#  } else { }}
    <a class="layui-btn layui-btn-xs" lay-event="updatePairCode">已上传</a>
    {{#  }}}
</script>